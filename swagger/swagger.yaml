swagger: "2.0"
info:
  version: "0.0.1"
  title: Node Express JWT Example
host: localhost:3000
basePath: /api/v1
schemes:
  - http
  - https
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: |
     For accessing the API a valid JWT token must be passed in all the queries in
     the 'Authorization' header.


     A valid JWT token is generated by the API and retourned as answer of a call
     to the route /login giving a valid user & password.


     The following syntax must be used in the 'Authorization' header :

         Bearer xxxxxx.yyyyyyy.zzzzzz

consumes:
  - application/json
produces:
  - application/json
tags:
  - name: Authentication
    description: "Authentication endpoint for api users"
  - name: Restricted
    description: "Restricted routes that require authentication"
paths:

  /auth:
    x-swagger-router-controller: authenticaiton.controller
    post:
      tags:
        - Authentication
      operationId: authPost
      description: "Authenticate endpoint for users"
      summary: "A user need to retrieve a JWT token to access use this API."
      parameters:
        - name: authentication
          in: body
          required: true
          schema:
            $ref: "#/definitions/Authentication"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Token"
        "401":
          description: "Invalid Username/Password"
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definintions/Error"

  /restricted/usersOnly:
    x-swagger-router-controller: restricted.controller
    get:
      tags:
        - Restricted
      operationId: usersOnlyGet
      description: "Protected endpoint, only accessible to 'USER' role"
      security:
        - Bearer: []
      x-security-scopes:
        - user
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Message"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#definitions/Error"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"

  /restricted/adminOnly:
    x-swagger-router-controller: restricted.controller
    get:
      tags:
        - Restricted
      operationId: adminOnlyGet
      description: "Protected endpoint, only accessible to 'ADMIN' role"
      security:
        - Bearer: []
      x-security-scopes:
        - admin
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Message"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"

definitions:
  Authentication:
    type: object
    properties:
      username:
        type: string
        example: "username"
      password:
        type: string
        example: "password"
  Message:
    type: object
    properties:
      message:
        type: string
  Token:
    type: object
    properties:
      token:
        type: string
  Error:
    type: object
    properties:
      error:
        type: string
